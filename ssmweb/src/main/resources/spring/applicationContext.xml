<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
	<context:annotation-config></context:annotation-config>
    <context:component-scan base-package="xyz.chanjkf">
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>


	<context:property-placeholder location="classpath:persistence-*.properties" />

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<!-- 可以加多个包 -->
				<value>xyz.chanjkf.entity</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.connection.isolation">${hibernate.connection.isolation}</prop>
				<!--<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>-->
				<!-- 开启查询缓存 -->
				<!--<prop key="hibernate.cache.use_query_cache">false</prop>-->
				<!-- 开启二级缓存 -->
				<!--<prop key="hibernate.cache.use_second_level_cache">true</prop>-->
				<!--&lt;!&ndash; 高速缓存提供程序 &ndash;&gt;-->
				<!--&lt;!&ndash;由于spring也使用了Ehcache, 保证双方都使用同一个缓存管理器 &ndash;&gt;-->
				<!--<prop key="hibernate.cache.region.factory_class">-->
				<!--org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory-->
				<!--</prop>-->
				<!--<prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache.xml</prop>-->
				<!--<prop key="hibernate.generate_statistics">true</prop>-->
			</props>
		</property>

		<!--<property name="mappingResources">-->
			<!--<list>-->
				<!--<value>hbm/snaker.task.hbm.xml</value>-->
				<!--<value>hbm/snaker.order.hbm.xml</value>-->
				<!--<value>hbm/snaker.ccorder.hbm.xml</value>-->
				<!--<value>hbm/snaker.process.hbm.xml</value>-->
				<!--<value>hbm/snaker.taskactor.hbm.xml</value>-->
				<!--<value>hbm/snaker.workitem.hbm.xml</value>-->
				<!--<value>hbm/snaker.surrogate.hbm.xml</value>-->
			<!--</list>-->
		<!--</property>-->

	</bean>

	<!-- 数据库映射 -->
	<!--  class="org.apache.tomcat.dbcp.dbcp.BasicDataSource" -->
	<!--  class="org.springframework.jdbc.datasource.DriverManagerDataSource" -->
	<!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
	<!--<property name="driverClassName" value="${hibernate.connection.driverClass}" />-->
	<!--<property name="url" value="${hibernate.connection.url}" />-->
	<!--<property name="username" value="${hibernate.connection.username}" />-->
	<!--<property name="password" value="${hibernate.connection.password}" />-->
	<!--</bean>-->

	<!-- 数据库映射 -->
	<!--  class="org.apache.tomcat.dbcp.dbcp.BasicDataSource" -->
	<!--  class="org.springframework.jdbc.datasource.DriverManagerDataSource" -->

	<bean id="dataSource"
		  class="com.zaxxer.hikari.HikariDataSource" destroy-method="shutdown">
		<constructor-arg>
			<bean class="com.zaxxer.hikari.HikariConfig">
				<property name="driverClassName" value="${hibernate.connection.driverClass}"/>
				<property name="jdbcUrl" value="${hibernate.connection.url}"/>
				<property name="username" value="${hibernate.connection.username}"/>
				<property name="password" value="${hibernate.connection.password}"/>
				<property name="readOnly" value="false" />
				<property name="connectionTimeout" value="${jdbc.connectionTimeout}"/>
				<property name="idleTimeout" value="${jdbc.idleTimeout}"/>
				<property name="maxLifetime" value="${jdbc.maxLifetime}"/>
				<property name="maximumPoolSize" value="${jdbc.maximumPoolSize}"/>
			</bean>
		</constructor-arg>
	</bean>

	<!-- 配置Hibernate事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 单数据源事务 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="search*" propagation="REQUIRED" read-only="true" />
			<tx:method name="is*" propagation="REQUIRED" read-only="true" />
			<tx:method name="has*" propagation="REQUIRED" read-only="true" />
			<tx:method name="can*" propagation="REQUIRED" read-only="true" />
			<tx:method name="update*" propagation="REQUIRED" read-only="true" />
			<tx:method name="create*" propagation="REQUIRED" read-only="true" />
			<tx:method name="register*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<aop:config expose-proxy="true">
		<aop:pointcut id="allManagerMethod" expression="execution(* xyz.chanjkf.service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="allManagerMethod"/>
	</aop:config>


	<!-- 配置事务异常封装 -->
	<bean id="persistenceExceptionTranslationPostProcessor"
		  class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!-- Freemarker配置 -->
	<bean id="freemarkerConfig"
		  class="xyz.chanjkf.utils.freemarker.CustomFreeMarkerConfigurer">

		<property name="templateLoaderPath" value="/view/ftl/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="number_format">0.##########</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="template_exception_handler">ignore</prop>
			</props>
		</property>
	</bean>
</beans>